{"ast":null,"code":"import _defineProperty from \"/Users/adodge/lighthouse/SocialCinema/social-cinema/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/adodge/lighthouse/SocialCinema/social-cinema/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/adodge/lighthouse/SocialCinema/social-cinema/src/components/Genres.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nimport './App.css';\nimport Genre from \"./Genre\";\nimport axios from \"axios\";\nexport default function Genres(props) {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        genres = _useState2[0],\n        setGenres = _useState2[1];\n\n  useEffect(() => {\n    axios.get(\"http://localhost:5000/api/genres\").then(response => {\n      setGenres(response.data);\n    });\n  }, []);\n  const lovedGenres = [];\n  const hatedGenres = [];\n\n  for (const genre of props.userGenres) {\n    if (genre.preference) {\n      lovedGenres.push(genre.id);\n    } else if (!genre.preference) {\n      hatedGenres.push(genre.id);\n    }\n  }\n\n  const setGenre = (id, value) => {\n    console.log(\"Set \".concat(id, \" to \").concat(value));\n    const genre = {\n      name,\n      preference: value\n    };\n\n    const genres = _objectSpread({}, props.userGenres, {\n      genre\n    }); // for (const genre of props.userGenres) {\n    //   if (genre.name === name) {\n    //     genre.preference = value;\n    //   }\n    // }\n\n\n    console.log(genres);\n  };\n\n  const genreOptions = [];\n\n  for (const genre of genres) {\n    genreOptions.push(React.createElement(Genre, {\n      key: genre.id,\n      id: genre.id,\n      name: genre.name,\n      love_class: lovedGenres.includes(genre.id) ? \"selected\" : \"unselected\",\n      meh_class: lovedGenres.includes(genre.id) ? \"unselected\" : hatedGenres.includes(genre.id) ? \"unselected\" : \"selected\",\n      hate_class: hatedGenres.includes(genre.id) ? \"selected\" : \"unselected\",\n      setGenre: setGenre,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }));\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"section\", {\n    class: \"genres\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, genreOptions));\n}","map":{"version":3,"sources":["/Users/adodge/lighthouse/SocialCinema/social-cinema/src/components/Genres.js"],"names":["React","useState","useEffect","Genre","axios","Genres","props","genres","setGenres","get","then","response","data","lovedGenres","hatedGenres","genre","userGenres","preference","push","id","setGenre","value","console","log","name","genreOptions","includes"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,WAAP;AAEA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AAAA,oBACRL,QAAQ,CAAC,EAAD,CADA;AAAA;AAAA,QAC7BM,MAD6B;AAAA,QACrBC,SADqB;;AAGpCN,EAAAA,SAAS,CAAC,MAAK;AACbE,IAAAA,KAAK,CAACK,GAAN,CAAU,kCAAV,EACCC,IADD,CACMC,QAAQ,IAAI;AAChBH,MAAAA,SAAS,CAACG,QAAQ,CAACC,IAAV,CAAT;AACD,KAHD;AAID,GALQ,EAKP,EALO,CAAT;AAOA,QAAMC,WAAW,GAAG,EAApB;AACA,QAAMC,WAAW,GAAG,EAApB;;AAEA,OAAK,MAAMC,KAAX,IAAoBT,KAAK,CAACU,UAA1B,EAAsC;AACpC,QAAID,KAAK,CAACE,UAAV,EAAsB;AACpBJ,MAAAA,WAAW,CAACK,IAAZ,CAAiBH,KAAK,CAACI,EAAvB;AACD,KAFD,MAEO,IAAI,CAACJ,KAAK,CAACE,UAAX,EAAuB;AAC5BH,MAAAA,WAAW,CAACI,IAAZ,CAAiBH,KAAK,CAACI,EAAvB;AACD;AACF;;AAED,QAAMC,QAAQ,GAAG,CAACD,EAAD,EAAKE,KAAL,KAAe;AAC9BC,IAAAA,OAAO,CAACC,GAAR,eAAmBJ,EAAnB,iBAA4BE,KAA5B;AAEA,UAAMN,KAAK,GAAG;AACZS,MAAAA,IADY;AAEZP,MAAAA,UAAU,EAAEI;AAFA,KAAd;;AAKA,UAAMd,MAAM,qBACPD,KAAK,CAACU,UADC;AAEVD,MAAAA;AAFU,MAAZ,CAR8B,CAa9B;AACA;AACA;AACA;AACA;;;AAEAO,IAAAA,OAAO,CAACC,GAAR,CAAYhB,MAAZ;AAED,GArBD;;AAuBA,QAAMkB,YAAY,GAAG,EAArB;;AAEA,OAAI,MAAMV,KAAV,IAAmBR,MAAnB,EAA2B;AACzBkB,IAAAA,YAAY,CAACP,IAAb,CACE,oBAAC,KAAD;AACE,MAAA,GAAG,EAAEH,KAAK,CAACI,EADb;AAEE,MAAA,EAAE,EAAEJ,KAAK,CAACI,EAFZ;AAGE,MAAA,IAAI,EAAEJ,KAAK,CAACS,IAHd;AAIE,MAAA,UAAU,EAAEX,WAAW,CAACa,QAAZ,CAAqBX,KAAK,CAACI,EAA3B,IAAgC,UAAhC,GAA4C,YAJ1D;AAKE,MAAA,SAAS,EAAEN,WAAW,CAACa,QAAZ,CAAqBX,KAAK,CAACI,EAA3B,IAAgC,YAAhC,GAA8CL,WAAW,CAACY,QAAZ,CAAqBX,KAAK,CAACI,EAA3B,IAAgC,YAAhC,GAA+C,UAL1G;AAME,MAAA,UAAU,EAAEL,WAAW,CAACY,QAAZ,CAAqBX,KAAK,CAACI,EAA3B,IAAgC,UAAhC,GAA4C,YAN1D;AAOE,MAAA,QAAQ,EAAEC,QAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAWD;;AAED,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAS,IAAA,KAAK,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGK,YADH,CADF,CADF;AAOD","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport './App.css';\n\nimport Genre from \"./Genre\";\nimport axios from \"axios\";\n\nexport default function Genres(props) {\n  const [genres, setGenres] = useState([])\n\n  useEffect(()=> {\n    axios.get(\"http://localhost:5000/api/genres\")\n    .then(response => {\n      setGenres(response.data);\n    })\n  },[]);\n\n  const lovedGenres = [];\n  const hatedGenres = [];\n\n  for (const genre of props.userGenres) {\n    if (genre.preference) {\n      lovedGenres.push(genre.id);\n    } else if (!genre.preference) {\n      hatedGenres.push(genre.id);\n    }\n  }\n\n  const setGenre = (id, value) => {\n    console.log(`Set ${id} to ${value}`);\n\n    const genre = {\n      name,\n      preference: value\n    }\n\n    const genres = {\n      ...props.userGenres,\n      genre\n    }\n\n    // for (const genre of props.userGenres) {\n    //   if (genre.name === name) {\n    //     genre.preference = value;\n    //   }\n    // }\n\n    console.log(genres)\n\n  }\n\n  const genreOptions = [];\n\n  for(const genre of genres) {\n    genreOptions.push(\n      <Genre\n        key={genre.id}\n        id={genre.id}\n        name={genre.name}\n        love_class={lovedGenres.includes(genre.id)? \"selected\": \"unselected\"}\n        meh_class={lovedGenres.includes(genre.id)? \"unselected\": hatedGenres.includes(genre.id)? \"unselected\" : \"selected\"}\n        hate_class={hatedGenres.includes(genre.id)? \"selected\": \"unselected\"}\n        setGenre={setGenre}\n      /> \n    )\n  }\n\n  return (\n    <div>\n      <section class=\"genres\">\n        {genreOptions}\n      </section>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}