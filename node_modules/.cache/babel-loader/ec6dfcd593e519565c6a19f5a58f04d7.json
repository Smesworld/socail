{"ast":null,"code":"import _slicedToArray from \"/Users/adodge/lighthouse/SocialCinema/social-cinema/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { useReducer, useEffect } from \"react\";\nimport reducer, { SET_USER, SET_GENRES } from \"../reducers/application\";\nimport axios from 'axios';\n\nconst initGenres = () => {\n  let genres = [];\n  return axios.get(\"http://localhost:5000/api/genres\").then(response => {\n    genres = response.data.map(genre => {\n      return genre = {\n        id: genre.id,\n        preference: \"\"\n      };\n    });\n    console.log(genres);\n    return genres;\n  });\n};\n\nexport default function useApplicationData() {\n  const _useReducer = useReducer(reducer, {\n    user: JSON.parse(localStorage.getItem('user')) || \"\",\n    genres: initGenres(),\n    favorite_movies: {},\n    later_movies: {}\n  }),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1];\n\n  useEffect(() => {\n    if (state.user !== \"\") {\n      Promise.all([axios.get(\"http://localhost:5000/api/\".concat(state.user.name, \"/genres\"))]).then(all => {\n        setGenres(all[0].data.genres);\n      });\n    }\n  }, [state.user]);\n\n  const setUser = user => {\n    localStorage.setItem('user', JSON.stringify(user));\n    dispatch({\n      type: SET_USER,\n      value: user\n    });\n  };\n\n  const setGenres = genres => {\n    dispatch({\n      type: SET_GENRES,\n      value: genres\n    });\n  };\n\n  return {\n    state,\n    setUser,\n    setGenres\n  };\n}\n;","map":{"version":3,"sources":["/Users/adodge/lighthouse/SocialCinema/social-cinema/src/hooks/useApplicationData.js"],"names":["useReducer","useEffect","reducer","SET_USER","SET_GENRES","axios","initGenres","genres","get","then","response","data","map","genre","id","preference","console","log","useApplicationData","user","JSON","parse","localStorage","getItem","favorite_movies","later_movies","state","dispatch","Promise","all","name","setGenres","setUser","setItem","stringify","type","value"],"mappings":";AAAA,SAASA,UAAT,EAAqBC,SAArB,QAAsC,OAAtC;AACA,OAAOC,OAAP,IAAkBC,QAAlB,EAA4BC,UAA5B,QAA8C,yBAA9C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,UAAU,GAAG,MAAM;AACvB,MAAIC,MAAM,GAAG,EAAb;AACA,SAAOF,KAAK,CAACG,GAAN,CAAU,kCAAV,EACNC,IADM,CACDC,QAAQ,IAAI;AAChBH,IAAAA,MAAM,GAAGG,QAAQ,CAACC,IAAT,CAAcC,GAAd,CAAkBC,KAAK,IAAI;AAClC,aAAOA,KAAK,GAAG;AACbC,QAAAA,EAAE,EAAED,KAAK,CAACC,EADG;AAEbC,QAAAA,UAAU,EAAE;AAFC,OAAf;AAID,KALQ,CAAT;AAOAC,IAAAA,OAAO,CAACC,GAAR,CAAYV,MAAZ;AAEA,WAAOA,MAAP;AACD,GAZM,CAAP;AAaD,CAfD;;AAiBA,eAAe,SAASW,kBAAT,GAA8B;AAAA,sBACjBlB,UAAU,CAACE,OAAD,EAAU;AAC5CiB,IAAAA,IAAI,EAAEC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,KAA4C,EADN;AAE5ChB,IAAAA,MAAM,EAAED,UAAU,EAF0B;AAG5CkB,IAAAA,eAAe,EAAE,EAH2B;AAI5CC,IAAAA,YAAY,EAAE;AAJ8B,GAAV,CADO;AAAA;AAAA,QACpCC,KADoC;AAAA,QAC7BC,QAD6B;;AAQ3C1B,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIyB,KAAK,CAACP,IAAN,KAAe,EAAnB,EAAuB;AACrBS,MAAAA,OAAO,CAACC,GAAR,CAAY,CACVxB,KAAK,CAACG,GAAN,qCAAuCkB,KAAK,CAACP,IAAN,CAAWW,IAAlD,aADU,CAAZ,EAGCrB,IAHD,CAGOoB,GAAD,IAAS;AACbE,QAAAA,SAAS,CAACF,GAAG,CAAC,CAAD,CAAH,CAAOlB,IAAP,CAAYJ,MAAb,CAAT;AACD,OALD;AAMD;AACF,GATQ,EASN,CAACmB,KAAK,CAACP,IAAP,CATM,CAAT;;AAWA,QAAMa,OAAO,GAAGb,IAAI,IAAI;AACtBG,IAAAA,YAAY,CAACW,OAAb,CAAqB,MAArB,EAA6Bb,IAAI,CAACc,SAAL,CAAef,IAAf,CAA7B;AACAQ,IAAAA,QAAQ,CAAC;AAAEQ,MAAAA,IAAI,EAAEhC,QAAR;AAAkBiC,MAAAA,KAAK,EAAEjB;AAAzB,KAAD,CAAR;AACD,GAHD;;AAKA,QAAMY,SAAS,GAAGxB,MAAM,IAAI;AAC1BoB,IAAAA,QAAQ,CAAC;AAAEQ,MAAAA,IAAI,EAAE/B,UAAR;AAAoBgC,MAAAA,KAAK,EAAE7B;AAA3B,KAAD,CAAR;AACD,GAFD;;AAIA,SAAO;AAAEmB,IAAAA,KAAF;AAASM,IAAAA,OAAT;AAAkBD,IAAAA;AAAlB,GAAP;AACD;AAAA","sourcesContent":["import { useReducer, useEffect } from \"react\";\nimport reducer, { SET_USER, SET_GENRES } from \"../reducers/application\";\nimport axios from 'axios'\n\nconst initGenres = () => {\n  let genres = []\n  return axios.get(\"http://localhost:5000/api/genres\")\n  .then(response => {\n    genres = response.data.map(genre => {\n      return genre = {\n        id: genre.id,\n        preference: \"\"\n      }\n    })\n\n    console.log(genres)\n\n    return genres\n  })\n}\n\nexport default function useApplicationData() {\n  const [state, dispatch] = useReducer(reducer, {\n    user: JSON.parse(localStorage.getItem('user')) || \"\",\n    genres: initGenres(),\n    favorite_movies: {},\n    later_movies: {}\n  });\n\n  useEffect(() => {\n    if (state.user !== \"\") {\n      Promise.all([\n        axios.get(`http://localhost:5000/api/${state.user.name}/genres`)\n      ])\n      .then((all) => {\n        setGenres(all[0].data.genres)\n      })\n    }\n  }, [state.user])\n\n  const setUser = user => {\n    localStorage.setItem('user', JSON.stringify(user));\n    dispatch({ type: SET_USER, value: user });\n  };\n\n  const setGenres = genres => {\n    dispatch({ type: SET_GENRES, value: genres });\n  };\n\n  return { state, setUser, setGenres };\n};\n"]},"metadata":{},"sourceType":"module"}