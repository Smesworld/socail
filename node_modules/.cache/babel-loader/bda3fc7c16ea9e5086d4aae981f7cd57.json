{"ast":null,"code":"import _slicedToArray from \"/Users/adodge/lighthouse/SocialCinema/social-cinema/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/adodge/lighthouse/SocialCinema/social-cinema/src/components/Genres.js\";\nimport React, { useState, useEffect } from \"react\";\nimport './App.css';\nimport Genre from \"./Genre\";\nimport axios from \"axios\";\nexport default function Genres(props) {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        genres = _useState2[0],\n        setGenres = _useState2[1];\n\n  useEffect(() => {\n    axios.get(\"http://localhost:5000/api/genres\").then(response => {\n      setGenres(response.data);\n    });\n  }, []);\n  const lovedGenres = [];\n  const hatedGenres = [];\n  console.log(\"END \" + props.userGenres);\n\n  for (const genre of props.userGenres) {\n    console.log(\"Genre \".concat(genre.id, \" pref \").concat(genre.preference));\n\n    if (genre.preference) {\n      lovedGenres.push(genre.id);\n    } else if (genre.preference === false) {\n      hatedGenres.push(genre.id);\n    }\n  }\n\n  const genreOptions = [];\n\n  for (const genre of genres) {\n    genreOptions.push(React.createElement(Genre, {\n      key: genre.id,\n      id: genre.id,\n      name: genre.name,\n      love_class: lovedGenres.includes(genre.id) ? \"selected\" : \"unselected\",\n      meh_class: lovedGenres.includes(genre.id) ? \"unselected\" : hatedGenres.includes(genre.id) ? \"unselected\" : \"selected\",\n      hate_class: hatedGenres.includes(genre.id) ? \"selected\" : \"unselected\",\n      setGenre: props.setGenre,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }));\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"section\", {\n    class: \"genres\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, genreOptions));\n}","map":{"version":3,"sources":["/Users/adodge/lighthouse/SocialCinema/social-cinema/src/components/Genres.js"],"names":["React","useState","useEffect","Genre","axios","Genres","props","genres","setGenres","get","then","response","data","lovedGenres","hatedGenres","console","log","userGenres","genre","id","preference","push","genreOptions","name","includes","setGenre"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,WAAP;AAEA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AAAA,oBACRL,QAAQ,CAAC,EAAD,CADA;AAAA;AAAA,QAC7BM,MAD6B;AAAA,QACrBC,SADqB;;AAGpCN,EAAAA,SAAS,CAAC,MAAK;AACbE,IAAAA,KAAK,CAACK,GAAN,CAAU,kCAAV,EACCC,IADD,CACMC,QAAQ,IAAI;AAChBH,MAAAA,SAAS,CAACG,QAAQ,CAACC,IAAV,CAAT;AACD,KAHD;AAID,GALQ,EAKP,EALO,CAAT;AAOA,QAAMC,WAAW,GAAG,EAApB;AACA,QAAMC,WAAW,GAAG,EAApB;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAY,SAASV,KAAK,CAACW,UAA3B;;AAEA,OAAK,MAAMC,KAAX,IAAoBZ,KAAK,CAACW,UAA1B,EAAsC;AACpCF,IAAAA,OAAO,CAACC,GAAR,iBAAqBE,KAAK,CAACC,EAA3B,mBAAsCD,KAAK,CAACE,UAA5C;;AACA,QAAIF,KAAK,CAACE,UAAV,EAAsB;AACpBP,MAAAA,WAAW,CAACQ,IAAZ,CAAiBH,KAAK,CAACC,EAAvB;AACD,KAFD,MAEO,IAAID,KAAK,CAACE,UAAN,KAAqB,KAAzB,EAAgC;AACrCN,MAAAA,WAAW,CAACO,IAAZ,CAAiBH,KAAK,CAACC,EAAvB;AACD;AACF;;AAED,QAAMG,YAAY,GAAG,EAArB;;AAEA,OAAI,MAAMJ,KAAV,IAAmBX,MAAnB,EAA2B;AACzBe,IAAAA,YAAY,CAACD,IAAb,CACE,oBAAC,KAAD;AACE,MAAA,GAAG,EAAEH,KAAK,CAACC,EADb;AAEE,MAAA,EAAE,EAAED,KAAK,CAACC,EAFZ;AAGE,MAAA,IAAI,EAAED,KAAK,CAACK,IAHd;AAIE,MAAA,UAAU,EAAEV,WAAW,CAACW,QAAZ,CAAqBN,KAAK,CAACC,EAA3B,IAAgC,UAAhC,GAA4C,YAJ1D;AAKE,MAAA,SAAS,EAAEN,WAAW,CAACW,QAAZ,CAAqBN,KAAK,CAACC,EAA3B,IAAgC,YAAhC,GAA8CL,WAAW,CAACU,QAAZ,CAAqBN,KAAK,CAACC,EAA3B,IAAgC,YAAhC,GAA+C,UAL1G;AAME,MAAA,UAAU,EAAEL,WAAW,CAACU,QAAZ,CAAqBN,KAAK,CAACC,EAA3B,IAAgC,UAAhC,GAA4C,YAN1D;AAOE,MAAA,QAAQ,EAAEb,KAAK,CAACmB,QAPlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAWD;;AAED,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAS,IAAA,KAAK,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,YADH,CADF,CADF;AAOD","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport './App.css';\n\nimport Genre from \"./Genre\";\nimport axios from \"axios\";\n\nexport default function Genres(props) {\n  const [genres, setGenres] = useState([])\n\n  useEffect(()=> {\n    axios.get(\"http://localhost:5000/api/genres\")\n    .then(response => {\n      setGenres(response.data);\n    })\n  },[]);\n\n  const lovedGenres = [];\n  const hatedGenres = [];\n\n  console.log(\"END \" + props.userGenres)\n  \n  for (const genre of props.userGenres) {\n    console.log(`Genre ${genre.id} pref ${genre.preference}`)\n    if (genre.preference) {\n      lovedGenres.push(genre.id);\n    } else if (genre.preference === false) {\n      hatedGenres.push(genre.id);\n    }\n  }\n\n  const genreOptions = [];\n\n  for(const genre of genres) {\n    genreOptions.push(\n      <Genre\n        key={genre.id}\n        id={genre.id}\n        name={genre.name}\n        love_class={lovedGenres.includes(genre.id)? \"selected\": \"unselected\"}\n        meh_class={lovedGenres.includes(genre.id)? \"unselected\": hatedGenres.includes(genre.id)? \"unselected\" : \"selected\"}\n        hate_class={hatedGenres.includes(genre.id)? \"selected\": \"unselected\"}\n        setGenre={props.setGenre}\n      /> \n    )\n  }\n\n  return (\n    <div>\n      <section class=\"genres\">\n        {genreOptions}\n      </section>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}